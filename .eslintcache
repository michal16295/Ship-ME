[{"/Users/michalbarski/Desktop/Ship-ME/client/src/index.js":"1","/Users/michalbarski/Desktop/Ship-ME/client/src/App.js":"2","/Users/michalbarski/Desktop/Ship-ME/client/src/store/index.js":"3","/Users/michalbarski/Desktop/Ship-ME/client/src/store/user.js":"4","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/LoginScreen.js":"5","/Users/michalbarski/Desktop/Ship-ME/client/src/GlobalStyle.js":"6","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/RegisterScreen.js":"7","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/styles.js":"8","/Users/michalbarski/Desktop/Ship-ME/client/src/api/httpService.js":"9","/Users/michalbarski/Desktop/Ship-ME/client/src/validators/userValidators.js":"10","/Users/michalbarski/Desktop/Ship-ME/client/src/constants/pathConstants.js":"11","/Users/michalbarski/Desktop/Ship-ME/client/src/constants/globalConstants.js":"12","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/CompaniesScreen.js":"13","/Users/michalbarski/Desktop/Ship-ME/client/src/components/PrivateRoute.js":"14","/Users/michalbarski/Desktop/Ship-ME/client/src/store/userCompany.js":"15","/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/MainNavBar.js":"16","/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/NavBasStyles.js":"17","/Users/michalbarski/Desktop/Ship-ME/client/src/store/company.js":"18","/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/SubNavBar.js":"19","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Profile/ProfileScreen.js":"20","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/SubmitButton.js":"21","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormInput.js":"22","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/ErrorMessage.js":"23","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/Headings.js":"24","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormSelectInput.js":"25","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Company/company.js":"26","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/ImageUpload.js":"27","/Users/michalbarski/Desktop/Ship-ME/client/src/store/Image.js":"28","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/AccountScreen.js":"29","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/Users/Users.js":"30","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/Users/UserItem.js":"31","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/AddUserScreen.js":"32","/Users/michalbarski/Desktop/Ship-ME/client/src/store/currentUser.js":"33","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Companies/CompaniesScreen.js":"34","/Users/michalbarski/Desktop/Ship-ME/client/src/config/InitialValues.js":"35","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/CreateCancelButton.js":"36","/Users/michalbarski/Desktop/Ship-ME/client/src/config/TableVlues.js":"37","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/Table.js":"38","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/TableHeader.js":"39","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/TableBody.js":"40","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Dropdowns/ThreeDotsDrop.js":"41","/Users/michalbarski/Desktop/Ship-ME/client/src/config/roles.js":"42","/Users/michalbarski/Desktop/Ship-ME/client/src/store/currentCompany.js":"43","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Companies/NewCompanyScreen.js":"44","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormFooter.js":"45","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/PhoneInput.js":"46","/Users/michalbarski/Desktop/Ship-ME/client/src/validators/companyValidators.js":"47","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Errors/NotFound.js":"48","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Errors/NotAuthorize.js":"49","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/ExistingUsers.js":"50"},{"size":310,"mtime":1607534826656,"results":"51","hashOfConfig":"52"},{"size":2878,"mtime":1607935834220,"results":"53","hashOfConfig":"52"},{"size":529,"mtime":1607808649572,"results":"54","hashOfConfig":"52"},{"size":3584,"mtime":1607938615163,"results":"55","hashOfConfig":"52"},{"size":1683,"mtime":1607872289747,"results":"56","hashOfConfig":"52"},{"size":284,"mtime":1607545448998,"results":"57","hashOfConfig":"52"},{"size":2169,"mtime":1607951641937,"results":"58","hashOfConfig":"52"},{"size":757,"mtime":1607951718930,"results":"59","hashOfConfig":"52"},{"size":852,"mtime":1607805954569,"results":"60","hashOfConfig":"52"},{"size":2973,"mtime":1607876280326,"results":"61","hashOfConfig":"52"},{"size":396,"mtime":1607935875927,"results":"62","hashOfConfig":"52"},{"size":511,"mtime":1607805920609,"results":"63","hashOfConfig":"52"},{"size":1793,"mtime":1607935989229,"results":"64","hashOfConfig":"52"},{"size":490,"mtime":1607517076628,"results":"65","hashOfConfig":"52"},{"size":2639,"mtime":1607942039618,"results":"66","hashOfConfig":"52"},{"size":3646,"mtime":1607946219747,"results":"67","hashOfConfig":"52"},{"size":3397,"mtime":1607854779022,"results":"68","hashOfConfig":"52"},{"size":3192,"mtime":1607943205373,"results":"69","hashOfConfig":"52"},{"size":2043,"mtime":1607943916097,"results":"70","hashOfConfig":"52"},{"size":3944,"mtime":1607875878912,"results":"71","hashOfConfig":"52"},{"size":460,"mtime":1607805872620,"results":"72","hashOfConfig":"52"},{"size":967,"mtime":1607872690864,"results":"73","hashOfConfig":"52"},{"size":464,"mtime":1607469361586,"results":"74","hashOfConfig":"52"},{"size":795,"mtime":1607867109322,"results":"75","hashOfConfig":"52"},{"size":1184,"mtime":1607851583142,"results":"76","hashOfConfig":"52"},{"size":3817,"mtime":1607930955345,"results":"77","hashOfConfig":"52"},{"size":2122,"mtime":1607945598650,"results":"78","hashOfConfig":"52"},{"size":1244,"mtime":1607945458309,"results":"79","hashOfConfig":"52"},{"size":603,"mtime":1607852051784,"results":"80","hashOfConfig":"52"},{"size":2287,"mtime":1607852284020,"results":"81","hashOfConfig":"52"},{"size":2087,"mtime":1607888623461,"results":"82","hashOfConfig":"52"},{"size":3733,"mtime":1607939033180,"results":"83","hashOfConfig":"52"},{"size":3819,"mtime":1607937028814,"results":"84","hashOfConfig":"52"},{"size":3685,"mtime":1607952383595,"results":"85","hashOfConfig":"52"},{"size":648,"mtime":1607940300066,"results":"86","hashOfConfig":"52"},{"size":1025,"mtime":1607876017569,"results":"87","hashOfConfig":"52"},{"size":387,"mtime":1607790993303,"results":"88","hashOfConfig":"52"},{"size":589,"mtime":1607805781809,"results":"89","hashOfConfig":"52"},{"size":480,"mtime":1607778462587,"results":"90","hashOfConfig":"52"},{"size":875,"mtime":1607805787803,"results":"91","hashOfConfig":"52"},{"size":1329,"mtime":1607888566122,"results":"92","hashOfConfig":"52"},{"size":92,"mtime":1607794156767,"results":"93","hashOfConfig":"52"},{"size":2254,"mtime":1607936398129,"results":"94","hashOfConfig":"52"},{"size":3728,"mtime":1607877719550,"results":"95","hashOfConfig":"52"},{"size":411,"mtime":1607865110118,"results":"96","hashOfConfig":"52"},{"size":727,"mtime":1607875172630,"results":"97","hashOfConfig":"52"},{"size":768,"mtime":1607876883249,"results":"98","hashOfConfig":"52"},{"size":605,"mtime":1607935649067,"results":"99","hashOfConfig":"52"},{"size":478,"mtime":1607935775162,"results":"100","hashOfConfig":"52"},{"size":1771,"mtime":1607940825402,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1oniva",{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"104"},"/Users/michalbarski/Desktop/Ship-ME/client/src/index.js",[],["221","222"],"/Users/michalbarski/Desktop/Ship-ME/client/src/App.js",["223","224"],"import React, { useEffect } from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport InitilCompaniesScreen from \"./screens/auth/CompaniesScreen\";\nimport NotFound from \"./components/Errors/NotFound\";\nimport NotAuthorize from \"./components/Errors/NotAuthorize\";\nimport ProfileScreen from \"./screens/Profile/ProfileScreen\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport paths from \"./constants/pathConstants\";\nimport { loadCurrentUser } from \"./store/currentUser\";\nimport MainNavBar from \"./components/NavBar/MainNavBar\";\nimport SubNavBar from \"./components/NavBar/SubNavBar\";\nimport CompanyScreen from \"./screens/Company/company\";\nimport { useHistory } from \"react-router-dom\";\nimport AccountScreen from \"./screens/Account/AccountScreen\";\nimport AddUserScreen from \"./screens/Account/AddUserScreen\";\nimport CompaniesScreen from \"./screens/Companies/CompaniesScreen\";\nimport NewCompanyScreen from \"./screens/Companies/NewCompanyScreen\";\n\nconst App = ({}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.currentUser);\n  useEffect(() => {\n    if (user.loggedIn) {\n      dispatch(loadCurrentUser());\n    }\n  }, []);\n  const privateRoutes = [\n    <PrivateRoute\n      key=\"HomePage\"\n      path={`${paths.PROFILE}/:id`}\n      component={ProfileScreen}\n    />,\n    <PrivateRoute\n      key=\"Company\"\n      exact\n      path={`${paths.COMPANY}/:id`}\n      component={CompanyScreen}\n    />,\n    <PrivateRoute\n      key=\"Account\"\n      exact\n      path={paths.ACCOUNT}\n      component={AccountScreen}\n    />,\n    <PrivateRoute\n      key=\"AddUser\"\n      exact\n      path={paths.ADD_USER}\n      component={AddUserScreen}\n    />,\n    <PrivateRoute\n      key=\"AddUser\"\n      exact\n      path={paths.COMPANIES}\n      component={CompaniesScreen}\n    />,\n    <PrivateRoute\n      key=\"NewCompany\"\n      exact\n      path={paths.NEW_COMPANY}\n      component={NewCompanyScreen}\n    />,\n  ];\n  const publicRoutes = [\n    <Route key=\"Login\" exact path={paths.LOGIN} component={LoginScreen} />,\n    <Route\n      key=\"Register\"\n      exact\n      path={paths.REGISTER}\n      component={RegisterScreen}\n    />,\n    <Route\n      key=\"InitialCompanies\"\n      exact\n      path={paths.WELCOME_COMPANIES}\n      component={InitilCompaniesScreen}\n    />,\n    <Route\n      key=\"NotAuthorize\"\n      exact\n      path={paths.NOT_AUTHORIZE}\n      component={NotAuthorize}\n    />,\n  ];\n  return (\n    <Router history={history}>\n      <MainNavBar />\n      <SubNavBar />\n      <Switch>\n        {privateRoutes}\n        {publicRoutes}\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\nexport default App;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/store/index.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/store/user.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/LoginScreen.js",["225"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormInput from \"../../components/Form/FormInput\";\nimport Heading from \"../../components/Form/Headings\";\nimport SubmitButton from \"../../components/Form/SubmitButton\";\nimport GlobalStyle from \"../../GlobalStyle\";\nimport { Formik, Form } from \"formik\";\nimport { Wrapper, StyledForm, Titles, SignUp } from \"./styles\";\nimport { loginValidation } from \"../../validators/userValidators\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { login } from \"../../store/currentUser\";\nimport paths from \"../../constants/pathConstants\";\n\nconst LoginScreen = ({}) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.currentUser);\n  if (user.loggedIn) {\n    window.location = paths.HOMEPAGE;\n  }\n  return (\n    <Wrapper>\n      <GlobalStyle primary />\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={loginValidation}\n        onSubmit={(values) => {\n          dispatch(login(values));\n        }}\n      >\n        <StyledForm>\n          <Form>\n            <Titles>\n              <Heading title=\"Ship-ME\" subtitle=\"Sign In\" />\n            </Titles>\n            <FormInput label=\"Email Address\" name=\"email\" type=\"email\" />\n            <FormInput label=\"Password\" name=\"password\" type=\"password\" />\n            <ErrorMessage error={user.error} visible={user.errors} />\n            <SubmitButton title=\"Log In\" type=\"submit\" />\n          </Form>\n          <SignUp to={paths.REGISTER}>Sign up</SignUp>\n        </StyledForm>\n      </Formik>\n    </Wrapper>\n  );\n};\nexport default LoginScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/GlobalStyle.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/RegisterScreen.js",["226"],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/styles.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/api/httpService.js",["227"],"import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport globalConstants from \"../constants/globalConstants\";\n\nconst { COOKIE_JWT, HEADER_AUTH, LOCAL_STR_TOKEN, BASE_API } = globalConstants;\n\nconst api = axios.create({\n  baseURL: BASE_API,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\napi.interceptors.request.use(\n  (config) => {\n    // Add token to headers before request is sent\n    const cookie = Cookies.get(COOKIE_JWT);\n    if (\n      config.baseURL === BASE_API &&\n      !config.headers.Authorization &&\n      !cookie\n    ) {\n      const token = localStorage.getItem(LOCAL_STR_TOKEN);\n      if (token) {\n        config.headers[HEADER_AUTH] = token;\n      }\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: api.get,\n  post: api.post,\n  put: api.put,\n  delete: api.delete,\n};\n","/Users/michalbarski/Desktop/Ship-ME/client/src/validators/userValidators.js",["228"],"import * as Yup from \"yup\";\n\nexport const registerValidation = Yup.object().shape({\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your Email\"),\n  firstName: Yup.string().required(\"Please enter your First Name\"),\n  lastName: Yup.string().required(\"Please enter your Last Name\"),\n  password: Yup.string()\n    .required(\"Please enter your password\")\n    .matches(\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n    ),\n  confirmPassword: Yup.string()\n    .required(\"Please confirm your password\")\n    .when(\"password\", {\n      is: (password) => (password && password.length > 0 ? true : false),\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password doesn't match\"),\n    }),\n});\nexport const newUserValidation = Yup.object().shape({\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your Email\"),\n  firstName: Yup.string().required(\"Please enter your First Name\"),\n  lastName: Yup.string().required(\"Please enter your Last Name\"),\n  jobTitle: Yup.string(),\n  firstName: Yup.string().required(\"Please enter your First Name\"),\n  password: Yup.string()\n    .required(\"Please enter your password\")\n    .matches(\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n    ),\n  confirmPassword: Yup.string()\n    .required(\"Please confirm your password\")\n    .when(\"password\", {\n      is: (password) => (password && password.length > 0 ? true : false),\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password doesn't match\"),\n    }),\n});\nexport const loginValidation = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"Your password is too short\")\n    .required(\"Please enter your password\"),\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your email\"),\n});\nexport const updateUserValidation = Yup.object().shape({\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your Email\"),\n  firstName: Yup.string().required(\"Please enter your First Name\"),\n  lastName: Yup.string().required(\"Please enter your Last Name\"),\n  password: Yup.string()\n    .required(\"Please enter your password\")\n    .matches(\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n    ),\n  confirmPassword: Yup.string()\n    .required(\"Please confirm your password\")\n    .when(\"password\", {\n      is: (password) => (password && password.length > 0 ? true : false),\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password doesn't match\"),\n    }),\n});\n","/Users/michalbarski/Desktop/Ship-ME/client/src/constants/pathConstants.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/constants/globalConstants.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/auth/CompaniesScreen.js",["229","230"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Heading from \"../../components/Form/Headings\";\nimport SubmitButton from \"../../components/Form/SubmitButton\";\nimport GlobalStyle from \"../../GlobalStyle\";\nimport FormSelectInput from \"../../components/Form/FormSelectInput\";\nimport { Wrapper, StyledForm, Titles } from \"./styles\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { loadUserCompanies } from \"../../store/userCompany\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadInitialCompany } from \"../../store/currentCompany\";\nimport paths from \"../../constants/pathConstants\";\n\nconst InitilCompaniesScreen = ({}) => {\n  const dispatch = useDispatch();\n  const userCompany = useSelector((state) => state.userCompany);\n  const { profile } = useSelector((state) => state.currentUser);\n  const [selectedData, updateSelectedData] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(loadUserCompanies());\n  }, []);\n  const onSelectChange = (event) => {\n    updateSelectedData(event);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loadInitialCompany(selectedData));\n    history.push(paths.PROFILE + `/${profile.user._id}`);\n  };\n  return (\n    <Wrapper>\n      <GlobalStyle primary />\n      <StyledForm>\n        <Titles>\n          <Heading title=\"Ship-ME\" subtitle=\"Companies\" />\n        </Titles>\n        <FormSelectInput\n          data={userCompany.companies}\n          onSelectChange={onSelectChange}\n        />\n        <ErrorMessage error={userCompany.error} visible={userCompany.errors} />\n        <SubmitButton title=\"Enter\" onClick={handleSubmit} />\n      </StyledForm>\n    </Wrapper>\n  );\n};\nexport default InitilCompaniesScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/PrivateRoute.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/store/userCompany.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/MainNavBar.js",["231","232"],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/NavBasStyles.js",["233"],"import { NavLink, Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport { Bell } from \"@styled-icons/boxicons-regular/Bell\";\nimport { ArrowIosDownwardOutline } from \"@styled-icons/evaicons-outline/ArrowIosDownwardOutline\";\n\nexport const Dropdown = styled.div`\n  display: none;\n  position: absolute;\n  background-color: #ffffff;\n  border: 1px solid #c6c6c6;\n  box-sizing: border-box;\n  min-width: 340px;\n  max-height: 300px;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.390823);\n  margin-top: 20px;\n  right: 0;\n  margin-right: 10px;\n  padding-bottom: 5px;\n  &:hover {\n    display: block;\n  }\n  z-index: 1;\n`;\nexport const Navbar = styled.div`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  background-color: ${(props) => (props.primary ? \"#222E50\" : \"white\")};\n  height: 64px;\n  max-height: 64px;\n  max-width: 100%;\n  box-shadow: ${(props) =>\n    props.primary ? null : \"0px 0px 4px rgba(0, 0, 0, 0.5)\"};\n`;\nexport const NavLogo = styled.div`\n  float: left;\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  position: relative;\n  font-size: 32px;\n`;\nexport const Image = styled.img`\n  float: left;\n  height: 45px;\n`;\nexport const Line = styled.div`\n  border-left: 2px solid white;\n  height: 50px;\n  position: absolute;\n  top: 5px;\n`;\nexport const Avatar = styled.img`\n  vertical-align: middle;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 25px;\n`;\n\nexport const RightSection = styled.div`\n  float: right;\n  padding: 5px;\n  &:hover ${Dropdown} {\n    display: block;\n  }\n`;\nexport const Icon = styled(Bell)`\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover {\n    color: #007991;\n  }\n`;\nexport const Arrow = styled(ArrowIosDownwardOutline)`\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover {\n    color: #007991;\n  }\n  &:hover ${Dropdown} {\n    display: block;\n  }\n`;\nexport const Nav = styled(NavLink)`\n  display: inline-block;\n  color: ${(props) => (props.primary ? \"white\" : \"#232323\")};\n  text-align: center;\n  padding: 10px 15px;\n  text-decoration: none;\n  position: relative;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-style: normal;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 1px;\n`;\nexport const LeftSection = styled.div`\n  float: left;\n  margin-left: 12px;\n  margin-top: 17px;\n`;\nexport const DropLink = styled(Link)`\n  text-decoration: none;\n  color: #232323;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 16px;\n  display: block;\n  padding-top: 15px;\n  padding-bottom: 5px;\n  padding-left: 30px;\n  &:hover {\n    color: #007991;\n  }\n`;\n\nexport const ImageDrop = styled.div`\n  padding-left: 30px;\n  padding-top: 20px;\n  grid-row: 1 / 3;\n  grid-column: 2 / 3;\n`;\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  grid-template-columns: repeat(2, 100px);\n  grid-auto-rows: 70px;\n`;\nexport const FullName = styled.span`\n  font-weight: 900;\n  display: block;\n`;\nexport const Heading = styled.div`\n  margin-top: 25px;\n`;\nexport const DropDownLi = styled.li`\n  display: inline-block;\n  &:hover ${Dropdown} {\n    display: block;\n  }\n`;\nexport const Logout = styled.a`\n  cursor: pointer;\n  text-decoration: none;\n  color: #232323;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 16px;\n  display: block;\n  padding-top: 15px;\n  padding-bottom: 5px;\n  padding-left: 30px;\n  &:hover {\n    color: #007991;\n  }\n`;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/store/company.js",["234"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport http from \"../api/httpService\";\nimport paths from \"../constants/pathConstants\";\nimport globalConstants from \"../constants/globalConstants\";\n\n// Slice\nconst slice = createSlice({\n  name: \"company\",\n  initialState: {\n    company: null,\n    loading: true,\n    error: \"\",\n    errors: false,\n  },\n  reducers: {\n    loadCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    loadCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    updateCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    updateCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    createCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    createCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    deleteCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    deleteCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    clearCompany: (state, action) => {\n      state.company = null;\n      state.loading = true;\n      state.errors = false;\n    },\n  },\n});\nexport default slice.reducer;\n// Actions\nconst {\n  loadCompanySuccess,\n  loadCompanyError,\n  updateCompanySuccess,\n  updateCompanyError,\n  createCompanyError,\n  createCompanySuccess,\n  deleteCompanySuccess,\n  deleteCompanyError,\n  clearCompany,\n} = slice.actions;\n\nexport const loadCompany = (id) => async (dispatch) => {\n  try {\n    dispatch(clearCompany());\n    const res = await http.get(`/companies/loadCompany/${id}`);\n    dispatch(loadCompanySuccess(res.data));\n  } catch (e) {\n    dispatch(loadCompanyError(e.response.data.error));\n  }\n};\nexport const updateCompany = (id, data) => async (dispatch) => {\n  try {\n    const res = await http.post(`/companies/updateCompany/${id}`, data);\n    dispatch(updateCompanySuccess(res.data));\n    window.location.reload();\n  } catch (e) {\n    dispatch(updateCompanyError(e.response.data.error));\n  }\n};\nexport const createCompany = (data) => async (dispatch) => {\n  try {\n    const res = await http.post(`/companies/createCompany`, data);\n    dispatch(createCompanySuccess(res.data));\n    window.location = paths.COMPANIES;\n  } catch (e) {\n    dispatch(createCompanyError(e.response.data.error));\n  }\n};\nexport const deleteCompany = (id) => async (dispatch) => {\n  try {\n    const res = await http.delete(`/companies/deleteCompany/${id}`);\n    dispatch(deleteCompanySuccess(res.data));\n    window.location = paths.COMPANIES;\n  } catch (e) {\n    dispatch(deleteCompanyError(e.response.data.error));\n    if (e.response.status === 403) window.location = paths.NOT_AUTHORIZE;\n  }\n};\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/NavBar/SubNavBar.js",["235"],"import React, { useEffect } from \"react\";\nimport { Navbar, LeftSection, Nav } from \"./NavBasStyles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport GlobalStyle from \"../../GlobalStyle\";\nimport paths from \"../../constants/pathConstants\";\nimport { roles } from \"../../config/roles\";\n\nconst SubNavBar = () => {\n  const { profile } = useSelector((state) => state.currentUser);\n  const { company } = useSelector((state) => state.currentCompany);\n  const history = useHistory();\n  const currentPath = history.location.pathname;\n  if (\n    currentPath === paths.LOGIN ||\n    currentPath === paths.REGISTER ||\n    currentPath === paths.WELCOME_COMPANIES\n  )\n    return null;\n  if (!profile || !company) return null;\n  return (\n    <>\n      <GlobalStyle />\n      <Navbar>\n        <LeftSection>\n          <Nav\n            activeStyle={{\n              color: \"#232323\",\n              borderBottom: \"solid 3px #007991\",\n            }}\n            to={`${paths.PROFILE}/${profile.user._id}`}\n          >\n            Profile\n          </Nav>\n          {profile.role !== roles.superAdmin && (\n            <Nav\n              activeStyle={{\n                color: \"#232323\",\n                borderBottom: \"solid 3px #007991\",\n              }}\n              to={`${paths.COMPANY}/${company._id}`}\n            >\n              Company\n            </Nav>\n          )}\n          {(profile.role === roles.manager ||\n            profile.role === roles.superAdmin) && (\n            <Nav\n              activeStyle={{\n                color: \"#232323\",\n                borderBottom: \"solid 3px #007991\",\n              }}\n              to={paths.ACCOUNT}\n            >\n              Account\n            </Nav>\n          )}\n          <Nav\n            activeStyle={{\n              color: \"#232323\",\n              borderBottom: \"solid 3px #007991\",\n            }}\n            to=\"/companies\"\n          >\n            Companies\n          </Nav>\n        </LeftSection>\n      </Navbar>\n    </>\n  );\n};\n\nexport default SubNavBar;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Profile/ProfileScreen.js",["236","237","238","239","240"],"import React, { useEffect, useState } from \"react\";\nimport FormInput from \"../../components/Form/FormInput\";\nimport { Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport FormFooter from \"../../components/Form/FormFooter\";\nimport PhoneFormInput from \"../../components/Form/PhoneInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser } from \"../../store/user\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { updateUserValidation } from \"../../validators/userValidators\";\nimport ImageUpload from \"../../components/Form/ImageUpload\";\nimport { loadUser } from \"../../store/user\";\n\nconst StyledForm = styled.div`\n  width: 30%;\n  margin: auto;\n  hr {\n    background-color: #e3e3e3;\n  }\n`;\nconst Heading = styled.div`\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n`;\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10%;\n  margin: auto;\n`;\nconst ProfileScreen = ({ match }) => {\n  const { profile, loading } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [secondaryPhone, setSecondPhone] = useState(null);\n\n  useEffect(() => {\n    if (match.params) {\n      dispatch(loadUser(match.params.id));\n    }\n  }, []);\n  const handleUpdate = (val) => {\n    if (phone) val = { ...val, phone };\n    if (secondaryPhone) val = { ...val, secondaryPhone };\n    dispatch(updateUser(profile.user._id, val));\n  };\n  if (!profile) return null;\n  return (\n    <>\n      <Formik\n        initialValues={profile.user}\n        enableReinitialize={true}\n        onSubmit={(val) => {\n          handleUpdate(val);\n        }}\n      >\n        <Form>\n          <StyledForm>\n            <h1>Profile</h1>\n            <Heading>\n              <div style={{ paddingRight: \"10px\" }}>\n                {profile && profile.user && (\n                  <ImageUpload\n                    model=\"users\"\n                    currentImage={profile.user.avatar}\n                    id={profile.user._id}\n                  />\n                )}\n              </div>\n              <div>\n                <FormInput label=\"First Name\" name=\"firstName\" type=\"text\" />\n                <FormInput label=\"Last Name\" name=\"lastName\" type=\"text\" />\n              </div>\n            </Heading>\n            <FormInput label=\"Job Title\" name=\"jobTitle\" type=\"text\" />\n            <hr />\n            {profile.user && (\n              <PhoneFormInput\n                value={profile.user.phone}\n                label=\"Primary phone number\"\n                setPhone={setPhone}\n              />\n            )}\n\n            {profile.user && (\n              <PhoneFormInput\n                value={profile.user.secondaryPhone}\n                label=\"Secondary phone number\"\n                setPhone={setSecondPhone}\n              />\n            )}\n            <FormInput\n              label=\"Primary email\"\n              name=\"email\"\n              type=\"email\"\n              disabled\n            />\n            <FormInput\n              label=\"Secondary email\"\n              name=\"secondaryEmail\"\n              type=\"email\"\n            />\n            <hr />\n            <FormInput\n              label=\"Old password\"\n              name=\"oldPassword\"\n              type=\"password\"\n              value=\"demcsdcds\"\n            />\n            <FormInput\n              label=\"New password\"\n              name=\"newPassword\"\n              type=\"password\"\n            />\n            <FormInput\n              label=\"Confirm password\"\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n            <hr />\n            <ErrorMessage error={error} visible={error !== null} />\n          </StyledForm>\n          <FormFooter title=\"Save\" type=\"submit\" />\n        </Form>\n      </Formik>\n    </>\n  );\n};\nexport default ProfileScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/SubmitButton.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormInput.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/ErrorMessage.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/Headings.js",["241"],"import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport logo from \"../../Images/logo.png\";\n\nconst Title = styled.div`\n  font-size: 42px;\n  color: #222d50;\n  font-weight: 600;\n`;\nconst Image = styled.img`\n  height: 70px;\n`;\nconst Subtitle = styled.div`\n  font-size: 32px;\n  font-weight: 600;\n  margin-top: 10px;\n  padding-bottom: 50px;\n`;\nconst HeadingLogo = styled.div`\n  display: inline-flex !important;\n  justify-content: center;\n  align-items: center;\n  margin-right: 50px;\n`;\nfunction Heading({ title, subtitle }) {\n  return (\n    <div>\n      <HeadingLogo>\n        <div>\n          <Image src={logo} />\n        </div>\n\n        <Title>{title}</Title>\n      </HeadingLogo>\n      <Subtitle>{subtitle}</Subtitle>\n    </div>\n  );\n}\nexport default Heading;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormSelectInput.js",["242"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Select = styled.select`\n  background-color: white;\n  border: 1px solid lightgrey;\n  border-radius: 4px;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-style: normal;\n  font-weight: 400;\n  width: 100%;\n  margin-top: 0.5rem;\n  padding: 0.75rem 0.75rem;\n`;\nconst Label = styled.label`\n  width: 100%;\n  font-weight: 900;\n  font-size: 16px;\n  display: block;\n`;\n\nconst FormSelectInput = ({ data, onSelectChange, label = null, ...props }) => {\n  const [selectedData, updateSelectedData] = useState(\"\");\n\n  function handleChange(event) {\n    updateSelectedData(event.target.value);\n    if (onSelectChange) onSelectChange(event.target.value);\n  }\n  let options = data.map((data) => (\n    <option key={data.companyId} value={data.companyId}>\n      {data.name}\n    </option>\n  ));\n  return (\n    <>\n      {label && <Label htmlFor={props.id || props.name}>{label}</Label>}\n      <Select name=\"customSearch\" onChange={handleChange}>\n        <option value=\"\" disabled selected>\n          Select your option\n        </option>\n        {options}\n      </Select>\n    </>\n  );\n};\nexport default FormSelectInput;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Company/company.js",["243","244","245"],"import React, { useEffect, useState } from \"react\";\nimport FormInput from \"../../components/Form/FormInput\";\nimport { Formik, Form } from \"formik\";\nimport PhoneFormInput from \"../../components/Form/PhoneInput\";\nimport styled from \"styled-components\";\nimport FormFooter from \"../../components/Form/FormFooter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { updateCompany, loadCompany } from \"../../store/company\";\nimport ImageUpload from \"../../components/Form/ImageUpload\";\n\nconst StyledForm = styled.div`\n  width: 30%;\n  margin: auto;\n  hr {\n    background-color: #e3e3e3;\n  }\n`;\nconst Heading = styled.div`\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n`;\nconst SubHeading = styled.div`\n  display: flex;\n  column-gap: 10px;\n`;\n\nconst CompanyScreen = ({ match }) => {\n  const { loading, company } = useSelector((state) => state.company);\n  const dispatch = useDispatch();\n  const [error, setError] = useState(false);\n  const [phone, setPhone] = useState(null);\n  const [primaryContactPhone, setContactPhone] = useState(null);\n\n  useEffect(() => {\n    dispatch(loadCompany(match.params.id));\n  }, []);\n\n  const handleSubmit = (val) => {\n    if (phone) val = { ...val, phone };\n    if (primaryContactPhone) val = { ...val, primaryContactPhone };\n    console.log(val);\n    dispatch(updateCompany(company._id, val));\n  };\n  if (!company) return null;\n  return (\n    <>\n      <Formik\n        initialValues={company}\n        enableReinitialize={true}\n        onSubmit={(val) => handleSubmit(val)}\n      >\n        <Form>\n          <StyledForm>\n            <h1>Company</h1>\n            <Heading>\n              <div style={{ paddingRight: \"10px\" }}>\n                {company && (\n                  <ImageUpload\n                    model=\"companies\"\n                    currentImage={company.avatar}\n                    id={company._id}\n                  />\n                )}\n              </div>\n              <div>\n                <FormInput label=\"Company Name\" name=\"name\" type=\"text\" />\n                <FormInput label=\"Company Address\" name=\"address\" type=\"text\" />\n              </div>\n            </Heading>\n            <SubHeading>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"City\" name=\"city\" type=\"text\" />\n              </div>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"State\" name=\"state\" type=\"text\" />\n              </div>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"Zip Code\" name=\"zipCode\" type=\"number\" />\n              </div>\n            </SubHeading>\n            {company && (\n              <PhoneFormInput\n                value={company.phone}\n                label=\"Company phone\"\n                setPhone={setPhone}\n              />\n            )}\n            <FormInput label=\"Company email\" name=\"email\" type=\"email\" />\n            <FormInput label=\"Company website\" name=\"website\" type=\"text\" />\n            <hr />\n            <FormInput\n              label=\"Primary contact name\"\n              name=\"primaryContactName\"\n              type=\"text\"\n            />\n            {company && (\n              <PhoneFormInput\n                label=\"Primary contact phone\"\n                setPhone={setContactPhone}\n                value={company.primaryContactPhone}\n              />\n            )}\n            <FormInput\n              label=\"Primary contact job title\"\n              name=\"primaryContactJobTitle\"\n              type=\"text\"\n            />\n            <hr />\n            <ErrorMessage error={error} visible={error !== null} />\n          </StyledForm>\n          <FormFooter title=\"Save\" type=\"submit\" />\n        </Form>\n      </Formik>\n    </>\n  );\n};\nexport default CompanyScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/ImageUpload.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/store/Image.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/AccountScreen.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/Users/Users.js",["246"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport paths from \"../../../constants/pathConstants\";\nimport UserItem from \"./UserItem\";\nimport { loadCompanyUsers } from \"../../../store/userCompany\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  padding: 40px;\n`;\nconst SubHeading = styled.div`\n  display: flex;\n  column-gap: 40px;\n`;\nconst Search = styled.div`\n  flex-grow: 2;\n`;\nconst Input = styled.input`\n  border-radius: 20px;\n  background-color: white;\n  border: 1px solid lightgrey;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-style: normal;\n  font-weight: 400;\n  width: 100%;\n  margin-top: 0.5rem;\n  padding: 10px 10px;\n  box-sizing: border-box;\n`;\nconst Button = styled(Link)`\n  background-color: #007991 !important;\n  border: none;\n  color: white;\n  padding: 15px 60px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 2px;\n  cursor: pointer;\n`;\nconst UsersList = styled.div`\n  padding-top: 20px;\n`;\nconst Line = styled.div`\n  border-left: 1px solid #e3e3e3;\n  width: 1px;\n  height: 700px;\n`;\nconst Users = () => {\n  const dispatch = useDispatch();\n  const { profile, loading } = useSelector((state) => state.currentUser);\n  const { users, error } = useSelector((state) => state.userCompany);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    if (profile) dispatch(loadCompanyUsers(profile.companyId, search));\n  }, [loading]);\n\n  const handleSearch = (e) => {\n    const input = e.currentTarget.value;\n    setSearch(input);\n    dispatch(loadCompanyUsers(profile.companyId, input));\n  };\n  if (!users) return null;\n\n  return (\n    <Wrapper>\n      <h1>Users</h1>\n      <SubHeading>\n        <Search>\n          <Input placeholder=\"Search\" value={search} onChange={handleSearch} />\n        </Search>\n        <Button to={paths.ADD_USER}>Add User</Button>\n      </SubHeading>\n      <UsersList>\n        {users !== undefined && users.length > 0 ? (\n          users.map((user) => <UserItem key={user._id} data={user} />)\n        ) : (\n          <h4 style={{ color: \"Red\" }}>{error}</h4>\n        )}\n      </UsersList>\n      <Line />\n    </Wrapper>\n  );\n};\n\nexport default Users;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/Users/UserItem.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/AddUserScreen.js",["247"],"import React, { useState } from \"react\";\nimport FormInput from \"../../components/Form/FormInput\";\nimport PhoneFormInput from \"../../components/Form/PhoneInput\";\nimport { Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport FormSelectInput from \"../../components/Form/FormSelectInput\";\nimport { createUser } from \"../../store/user\";\nimport { newUser, roles } from \"../../config/InitialValues\";\nimport paths from \"../../constants/pathConstants\";\nimport CreateCancelButton from \"../../components/Form/CreateCancelButton\";\nimport { newUserValidation } from \"../../validators/userValidators\";\nimport ExistingUsers from \"./ExistingUsers\";\n\nconst StyledForm = styled.div`\n  padding: 50px;\n  width: 30%;\n  margin: auto;\n  hr {\n    background-color: #e3e3e3;\n  }\n`;\nconst Image = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n`;\nconst Heading = styled.div`\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n`;\nconst PassWrapper = styled.div`\n  display: flex;\n  column-gap: 20px;\n  margin-top: 20px;\n`;\nconst AddUserScreen = ({}) => {\n  const dispatch = useDispatch();\n  const stateUser = useSelector((state) => state.user);\n  const [error, setError] = useState(null);\n  const [role, updateRole] = useState(\"\");\n  const [phone, setPhone] = useState(null);\n\n  const onSelectChange = (event) => {\n    updateRole(event);\n  };\n\n  const handleSubmit = (val) => {\n    if (val.password !== val.confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    if (!phone) {\n      setError(\"Phone is required\");\n      return;\n    }\n    if (role === \"\") {\n      setError(\"Role is required\");\n      return;\n    }\n    val = { ...val, role, phone };\n    dispatch(createUser(val));\n  };\n  return (\n    <>\n      <Formik\n        initialValues={newUser}\n        validationSchema={newUserValidation}\n        onSubmit={(val) => handleSubmit(val)}\n      >\n        <StyledForm>\n          <Form>\n            <h1>New User</h1>\n            <Heading>\n              <div style={{ paddingRight: \"10px\" }}>\n                <Image src=\"https://i.imgur.com/A8xSdbG.jpg\" />\n              </div>\n              <div>\n                <FormInput label=\"First Name\" name=\"firstName\" type=\"text\" />\n                <FormInput label=\"Last Name\" name=\"lastName\" type=\"text\" />\n              </div>\n            </Heading>\n            <FormInput\n              label=\"Job Title (optional)\"\n              name=\"jobTitle\"\n              type=\"text\"\n              placeholder=\"ex. CEO\"\n            />\n            <FormInput label=\"Email\" name=\"email\" type=\"email\" />\n            <PhoneFormInput label=\"Phone\" setPhone={setPhone} />\n            <FormSelectInput\n              label=\"User type\"\n              name=\"role\"\n              data={roles}\n              onSelectChange={onSelectChange}\n            />\n            <PassWrapper>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"Password\" name=\"password\" type=\"password\" />\n              </div>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput\n                  label=\"Confirm password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n              </div>\n            </PassWrapper>\n            <hr />\n            <ErrorMessage error={stateUser.error} visible={stateUser.errors} />\n            <ErrorMessage error={error} visible={error !== null} />\n            <CreateCancelButton path={paths.ACCOUNT} />\n          </Form>\n          <ExistingUsers />\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\nexport default AddUserScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/store/currentUser.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Companies/CompaniesScreen.js",["248"],"/Users/michalbarski/Desktop/Ship-ME/client/src/config/InitialValues.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/CreateCancelButton.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/config/TableVlues.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/Table.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/TableHeader.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Table/TableBody.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Dropdowns/ThreeDotsDrop.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/config/roles.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/store/currentCompany.js",["249"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport http from \"../api/httpService\";\nimport globalConstants from \"../constants/globalConstants\";\n\n// Slice\nconst slice = createSlice({\n  name: \"currentCompany\",\n  initialState: {\n    company: null,\n    loading: true,\n    error: \"\",\n    errors: false,\n  },\n  reducers: {\n    loadCurrentCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    loadCurrentCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    updateCurrentCompanySuccess: (state, action) => {\n      state.company = action.payload;\n      state.loading = false;\n      state.errors = false;\n    },\n    updateCurrentCompanyError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.errors = true;\n    },\n    clearCompany: (state, action) => {\n      state.company = null;\n      state.loading = true;\n      state.errors = false;\n    },\n  },\n});\nexport default slice.reducer;\n// Actions\nconst {\n  loadCurrentCompanySuccess,\n  loadCurrentCompanyError,\n  updateCurrentCompanySuccess,\n  updateCurrentCompanyError,\n  clearCompany,\n} = slice.actions;\n\nexport const loadInitialCompany = (id) => async (dispatch) => {\n  try {\n    const res = await http.get(`/companies/loadInitilCompany/${id}`);\n    dispatch(loadCurrentCompanySuccess(res.data.company));\n    localStorage.setItem(globalConstants.LOCAL_STR_TOKEN, res.data.jwt);\n    window.location.reload();\n  } catch (e) {\n    dispatch(loadCurrentCompanyError(e.response.data.error));\n  }\n};\nexport const loadCurrentCompany = (id) => async (dispatch) => {\n  try {\n    const res = await http.get(`/companies/loadCompany/${id}`);\n    dispatch(loadCurrentCompanySuccess(res.data));\n  } catch (e) {\n    dispatch(loadCurrentCompanyError(e.response.data.error));\n  }\n};\nexport const updateCurrentCompany = (id, data) => async (dispatch) => {\n  try {\n    const res = await http.post(`/companies/updateCompany/${id}`, data);\n    dispatch(updateCurrentCompanySuccess(res.data));\n    window.location.reload();\n  } catch (e) {\n    dispatch(updateCurrentCompanyError(e.response.data.error));\n  }\n};\n","/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Companies/NewCompanyScreen.js",["250","251"],"import React, { useEffect, useState } from \"react\";\nimport FormInput from \"../../components/Form/FormInput\";\nimport { Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport paths from \"../../constants/pathConstants\";\nimport CreateCancelButton from \"../../components/Form/CreateCancelButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { newCompany } from \"../../config/InitialValues\";\nimport { createCompany } from \"../../store/company\";\nimport PhoneFormInput from \"../../components/Form/PhoneInput\";\nimport { newCompanyValidation } from \"../../validators/companyValidators\";\n\nconst StyledForm = styled.div`\n  width: 30%;\n  margin: auto;\n  hr {\n    background-color: #e3e3e3;\n  }\n  padding: 20px;\n`;\nconst Image = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n`;\nconst Heading = styled.div`\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n`;\nconst SubHeading = styled.div`\n  display: flex;\n  column-gap: 10px;\n`;\n\nconst NewCompanyScreen = ({}) => {\n  const company = useSelector((state) => state.company);\n  const dispatch = useDispatch();\n  const [phone, setPhone] = useState(null);\n  const [primaryContactPhone, setContactPhone] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = (val) => {\n    if (phone) val = { ...val, phone };\n    else {\n      setError(\"Phone is Required\");\n    }\n    if (primaryContactPhone) val = { ...val, primaryContactPhone };\n    else {\n      setError(\"Primary contact phone is Required\");\n    }\n    dispatch(createCompany(val));\n  };\n  if (company.error) setError(company.error);\n  return (\n    <>\n      <Formik\n        initialValues={newCompany}\n        validationSchema={newCompanyValidation}\n        onSubmit={(values) => {\n          handleSubmit(values);\n        }}\n      >\n        <StyledForm>\n          <Form>\n            <h1>New Company</h1>\n            <Heading>\n              <div style={{ paddingRight: \"10px\" }}>\n                <Image src=\"https://i.imgur.com/UeTYxRP.png\" />\n              </div>\n              <div>\n                <FormInput label=\"Company Name\" name=\"name\" type=\"text\" />\n                <FormInput label=\"Company Address\" name=\"address\" type=\"text\" />\n              </div>\n            </Heading>\n            <SubHeading>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"City\" name=\"city\" type=\"text\" />\n              </div>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"State\" name=\"state\" type=\"text\" />\n              </div>\n              <div style={{ flexGrow: \"1\" }}>\n                <FormInput label=\"Zip Code\" name=\"zipCode\" type=\"number\" />\n              </div>\n            </SubHeading>\n            <PhoneFormInput label=\"Company phone\" setPhone={setPhone} />\n            <FormInput label=\"Company email\" name=\"email\" type=\"email\" />\n            <FormInput label=\"Company website\" name=\"website\" type=\"text\" />\n            <hr />\n            <FormInput\n              label=\"Primary contact name\"\n              name=\"primaryContactName\"\n              type=\"text\"\n            />\n            <PhoneFormInput\n              label=\"Primary contact phone number\"\n              setPhone={setContactPhone}\n            />\n            <FormInput\n              label=\"Primary contact job title\"\n              name=\"primaryContactJobTitle\"\n              type=\"text\"\n            />\n            <hr />\n            <ErrorMessage error={error} visible={error !== \"\"} />\n            <CreateCancelButton path={paths.COMPANIES} />\n          </Form>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\nexport default NewCompanyScreen;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/FormFooter.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Form/PhoneInput.js",["252"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nconst Label = styled.label`\n  width: 100%;\n  font-weight: 900;\n  font-size: 16px;\n  display: block;\n  padding-bottom: 10px;\n`;\n\nconst PhoneWrapper = styled.div`\n  padding-bottom: 20px;\n  flex-grow: 1;\n`;\nconst PhoneFormInput = ({ value, setPhone, label }) => {\n  return (\n    <PhoneWrapper>\n      <Label htmlFor={label}>{label}</Label>\n      <PhoneInput\n        value={value}\n        inputStyle={{ width: \"100%\" }}\n        country={\"il\"}\n        name=\"phone\"\n        onChange={setPhone}\n      />\n    </PhoneWrapper>\n  );\n};\nexport default PhoneFormInput;\n","/Users/michalbarski/Desktop/Ship-ME/client/src/validators/companyValidators.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Errors/NotFound.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/components/Errors/NotAuthorize.js",[],"/Users/michalbarski/Desktop/Ship-ME/client/src/screens/Account/ExistingUsers.js",["253"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Select from \"react-select\";\nimport { loadUsers } from \"../../store/user\";\nimport SubmitButton from \"../../components/Form/SubmitButton\";\nimport { ExistingUserroles } from \"../../config/InitialValues\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { addExistingUser } from \"../../store/userCompany\";\n\nconst Wrapper = styled.div`\n  margin-top: 50px;\n`;\nconst ExistingUsers = (props) => {\n  const dispatch = useDispatch();\n  const { users } = useSelector((state) => state.user);\n  const { company } = useSelector((state) => state.currentCompany);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    dispatch(loadUsers());\n  }, []);\n  const handleAdd = () => {\n    if (!selectedUser || !selectedRole) {\n      setError(\"Fill all the fields\");\n      return;\n    }\n    const data = {\n      companyId: company._id,\n      role: selectedRole,\n      userId: selectedUser,\n    };\n    dispatch(addExistingUser(data));\n  };\n  return (\n    <Wrapper>\n      <h3>Existing Users</h3>\n      {users && (\n        <Select\n          placeholder=\"Choose user\"\n          options={users.users}\n          onChange={(v) => setSelectedUser(v.value)}\n        />\n      )}\n      <br />\n      <Select\n        placeholder=\"Choose role\"\n        options={ExistingUserroles}\n        onChange={(v) => setSelectedRole(v.value)}\n      />\n      <ErrorMessage error={error} visible={error} />\n      <SubmitButton title=\"Add\" onClick={handleAdd} />\n    </Wrapper>\n  );\n};\n\nexport default ExistingUsers;\n",{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":22,"column":14,"nodeType":"260","messageId":"261","endLine":22,"endColumn":16},{"ruleId":"262","severity":1,"message":"263","line":30,"column":6,"nodeType":"264","endLine":30,"endColumn":8,"suggestions":"265"},{"ruleId":"258","severity":1,"message":"259","line":14,"column":22,"nodeType":"260","messageId":"261","endLine":14,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":32,"column":1,"nodeType":"272","endLine":37,"endColumn":3},{"ruleId":"273","severity":1,"message":"274","line":29,"column":3,"nodeType":"275","messageId":"261","endLine":29,"endColumn":12},{"ruleId":"258","severity":1,"message":"259","line":14,"column":32,"nodeType":"260","messageId":"261","endLine":14,"endColumn":34},{"ruleId":"262","severity":1,"message":"276","line":23,"column":6,"nodeType":"264","endLine":23,"endColumn":8,"suggestions":"277"},{"ruleId":"258","severity":1,"message":"259","line":31,"column":21,"nodeType":"260","messageId":"261","endLine":31,"endColumn":23},{"ruleId":"262","severity":1,"message":"278","line":49,"column":6,"nodeType":"264","endLine":49,"endColumn":15,"suggestions":"279"},{"ruleId":"266","severity":1,"message":"280","line":2,"column":18,"nodeType":"268","messageId":"269","endLine":2,"endColumn":21},{"ruleId":"266","severity":1,"message":"281","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":23},{"ruleId":"266","severity":1,"message":"282","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"266","severity":1,"message":"283","line":10,"column":10,"nodeType":"268","messageId":"269","endLine":10,"endColumn":30},{"ruleId":"266","severity":1,"message":"284","line":25,"column":7,"nodeType":"268","messageId":"269","endLine":25,"endColumn":17},{"ruleId":"266","severity":1,"message":"285","line":33,"column":20,"nodeType":"268","messageId":"269","endLine":33,"endColumn":27},{"ruleId":"266","severity":1,"message":"286","line":35,"column":17,"nodeType":"268","messageId":"269","endLine":35,"endColumn":25},{"ruleId":"262","severity":1,"message":"287","line":43,"column":6,"nodeType":"264","endLine":43,"endColumn":8,"suggestions":"288"},{"ruleId":"266","severity":1,"message":"289","line":2,"column":18,"nodeType":"268","messageId":"269","endLine":2,"endColumn":35},{"ruleId":"266","severity":1,"message":"290","line":24,"column":10,"nodeType":"268","messageId":"269","endLine":24,"endColumn":22},{"ruleId":"266","severity":1,"message":"285","line":29,"column":11,"nodeType":"268","messageId":"269","endLine":29,"endColumn":18},{"ruleId":"266","severity":1,"message":"286","line":31,"column":17,"nodeType":"268","messageId":"269","endLine":31,"endColumn":25},{"ruleId":"262","severity":1,"message":"291","line":37,"column":6,"nodeType":"264","endLine":37,"endColumn":8,"suggestions":"292"},{"ruleId":"262","severity":1,"message":"293","line":60,"column":6,"nodeType":"264","endLine":60,"endColumn":15,"suggestions":"294"},{"ruleId":"258","severity":1,"message":"259","line":38,"column":24,"nodeType":"260","messageId":"261","endLine":38,"endColumn":26},{"ruleId":"262","severity":1,"message":"295","line":81,"column":6,"nodeType":"264","endLine":81,"endColumn":8,"suggestions":"296"},{"ruleId":"266","severity":1,"message":"297","line":49,"column":3,"nodeType":"268","messageId":"269","endLine":49,"endColumn":15},{"ruleId":"266","severity":1,"message":"282","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":36,"column":27,"nodeType":"260","messageId":"261","endLine":36,"endColumn":29},{"ruleId":"266","severity":1,"message":"267","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"276","line":24,"column":6,"nodeType":"264","endLine":24,"endColumn":8,"suggestions":"298"},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.loggedIn'. Either include them or remove the dependency array.","ArrayExpression",["301"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'firstName'.","ObjectExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'currentPath', 'dispatch', and 'profile'. Either include them or remove the dependency array.",["303"],"'css' is defined but never used.","'globalConstants' is defined but never used.","'useEffect' is defined but never used.","'updateUserValidation' is defined but never used.","'ButtonWrap' is assigned a value but never used.","'loading' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params'. Either include them or remove the dependency array.",["304"],"'createGlobalStyle' is defined but never used.","'selectedData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'dispatch', 'profile', and 'search'. Either include them or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'dispatch' and 'search'. Either include them or remove the dependency array.",["307"],"'clearCompany' is assigned a value but never used.",["308"],"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"311","fix":"323"},"Update the dependencies array to be: [dispatch, user.loggedIn]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch]",{"range":"326","text":"327"},"Update the dependencies array to be: [currentPath, dispatch, loading, profile]",{"range":"328","text":"329"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"330","text":"331"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"332","text":"333"},"Update the dependencies array to be: [dispatch, loading, profile, search]",{"range":"334","text":"335"},"Update the dependencies array to be: [dispatch, search]",{"range":"336","text":"337"},{"range":"338","text":"327"},[1400,1402],"[dispatch, user.loggedIn]",[1039,1041],"[dispatch]",[1290,1299],"[currentPath, dispatch, loading, profile]",[1374,1376],"[dispatch, match.params]",[1198,1200],"[dispatch, match.params.id]",[1535,1544],"[dispatch, loading, profile, search]",[2072,2074],"[dispatch, search]",[936,938]]